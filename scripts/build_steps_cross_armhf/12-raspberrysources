#!/bin/bash
# SPDX-FileCopyrightText: 2024 Ferenc Nandor Janky <ferenj@effective-range.com>
# SPDX-FileCopyrightText: 2024 Attila Gombos <attila.gombos@effective-range.com>
# SPDX-License-Identifier: MIT
set -x

STEP_DESCRIPTION="Downloading and setting up raspberry sources"
source "$(dirname $0)/../build_common"

echo "Downloading raspberry packages"

mkdir -p rpi-deb
cd rpi-deb

if [ $DEBOOTSTRAP_TARGET == "bullseye" ]
then
    RPI_KERNEL_GIT_TAG=${RPI_KERNEL_HEADERS_VERSION#*:}
    RPI_KERNEL_GIT_TAG=${RPI_KERNEL_GIT_TAG%-*}
    git clone --branch=${RPI_KERNEL_GIT_TAG} --depth=1 https://github.com/raspberrypi/linux.git rpi-linux
    cp -vf /home/crossbuilder/target/.config rpi-linux/.config
    pushd rpi-linux
    make ARCH=$LINUX_ARCH INSTALL_HDR_PATH=$INSTALL_PATH/$TARGET headers_install
    popd
elif [ $DEBOOTSTRAP_TARGET == "bookworm" ]
then
    apt-get source linux-source-${LINUX_KERNEL_MINOR_VERSION}
    cp -vf /home/crossbuilder/target/.config linux-${LINUX_KERNEL_VERSION}/.config
    pushd linux-${LINUX_KERNEL_VERSION}
    make ARCH=$LINUX_ARCH INSTALL_HDR_PATH=$INSTALL_PATH/$TARGET headers_install
    popd
else
    echo "Unhandled target $DEBOOTSTRAP_TARGET"
    exit 1
fi


cd ..

echo "Downloading rpi libc source with patches"

# this creates the glibc directory, as it unpacks the archive
apt-get source libc6:${RPI_APT_ARCH}

CURRENT_GLIBC_VER="$(ls -1r glibc*.tar.xz | tail -1 )"

# Dropping .debian.tar.xz extension
CURRENT_GLIBC_VER="${CURRENT_GLIBC_VER%.*.*.*}"

# Droppig glibc_ prefix
CURRENT_GLIBC_VER="${CURRENT_GLIBC_VER#glibc_}"

# Dropping the patch version from GLIBC versions
CURRENT_GLIBC_VER=$(echo $CURRENT_GLIBC_VER | cut -d'+' -f1)

LIBC6_BASE_VERSION=$(echo $LIBC6_VERSION | cut -d'+' -f1)


if [ "$LIBC6_BASE_VERSION" != "$CURRENT_GLIBC_VER" ]; then
    echo "Base versions mismatch between libc versions $LIBC6_BASE_VERSION != $CURRENT_GLIBC_VER"
    echo "This might cause runtime errors, please update the TARGET definition file!"
    exit 1
fi


#######################

echo "Patching missing texinfo files for manual generation"
rm -rf glibc-$GLIBC_VERSION/manual
cp -rfv pkgFix/glibc-$GLIBC_VERSION/manual glibc-$GLIBC_VERSION/