# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Publish Docker cross base image

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
      sku:
        required: false
        type: string
        default: "PROTO-0002"
    outputs:
      imageid:
        description: "The docker image ID for the cross base image that's built"
        value: ${{ jobs.build_base_cross_image.outputs.imageid }}
      imagever:
        description: "The docker image tag for the cross base image that's built"
        value: ${{ jobs.build_base_cross_image.outputs.imagever }}


jobs:
  build_base_cross_image:
    name: Push Docker cross base image to dockerhub
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME  }}
          password: ${{ secrets.DOCKERHUB_TOKEN  }}
      
      - name: Generate Base Image version hash
        id: meta
        run: |
          export ER_IMG_TAG="$(./scripts/gen_cross_hash ${{ inputs.arch }}  ./SKU/${{ inputs.sku }})"
          echo "version=$ER_IMG_TAG" >> $GITHUB_OUTPUT
          echo "tags=effectiverange/${{ inputs.arch }}-tools-cross:$ER_IMG_TAG" >> $GITHUB_OUTPUT
          echo "generate_image=$(./scripts/check_cross_base ${{ inputs.arch }} ./SKU/${{ inputs.sku }})" >> $GITHUB_OUTPUT
        
      - name: Build and push Docker images
        if: steps.meta.outputs.generate_image == 'true'
        id: dbuild
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          push: true
          file: "Dockerfile-cross"
          build-args: |
           SKU_DIR=SKU/${{ inputs.sku }}
           BUILD_ARCH=${{ inputs.arch }}
          tags: ${{ steps.meta.outputs.tags }}
    outputs:
      imageid: ${{ steps.dbuild.outputs.imageid }}
      imagever: ${{ steps.meta.outputs.version }}

        
